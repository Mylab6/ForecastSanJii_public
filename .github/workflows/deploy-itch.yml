name: Deploy to Itch.io

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment:
      name: Web
    container:
      image: barichello/godot-ci:latest
    defaults:
      run:
        shell: bash
    env:
      EXPORT_PRESET: "Web"
      ITCH_TARGET: "${{ secrets.ITCH_GAME_URL }}:html5"
      BUTLER_API_KEY: ${{ secrets.BUTLER_API_KEY }}

    steps:
      - uses: actions/checkout@v4

      - name: Preflight
        run: |
          set -euo pipefail
          [[ -n "${ITCH_TARGET:-}" ]] || { echo "Missing ITCH_GAME_URL (env: Web)"; exit 1; }
          [[ -n "${BUTLER_API_KEY:-}" ]] || { echo "Missing BUTLER_API_KEY (env: Web)"; exit 1; }
          godot --version
          butler -V

      - name: Make export templates visible to Godot
        run: |
          set -euo pipefail
          SRC="/root/.local/share/godot/export_templates"
          DST="$HOME/.local/share/godot/export_templates"
          if [[ -d "$SRC" ]]; then
            mkdir -p "$DST"
            cp -a "$SRC/"* "$DST/"
          fi
          echo "After copy, template dir:"
          find "$DST" -maxdepth 2 -type f -name 'web*_release.zip' -o -name 'web*_debug.zip' | sed 's/^/  /' || true

      - name: Ensure 4.5 export templates exist
        run: |
          set -euo pipefail
          VER="4.5"
          VERDIR="${VER}.stable"
          DST="$HOME/.local/share/godot/export_templates/${VERDIR}"
          if [[ -f "${DST}/web_nothreads_release.zip" || -f "${DST}/web_release.zip" ]]; then
            echo "Templates present."
          else
            BASE="https://downloads.tuxfamily.org/godotengine/${VER}"
            mkdir -p "$DST"
            curl -sSL -o /tmp/templates.tpz "${BASE}/Godot_v${VER}-stable_export_templates.tpz"
            TMPDIR="$(mktemp -d)"
            unzip -q /tmp/templates.tpz -d "$TMPDIR"
            shopt -s dotglob
            mv "$TMPDIR/templates/"* "$DST/"
            rm -rf "$TMPDIR" /tmp/templates.tpz
            echo "Installed templates to $DST"
          fi

      - name: Export HTML5
        run: |
          set -euo pipefail
          mkdir -p build
          godot --headless --path . --export-release "$EXPORT_PRESET" "build/index.html"
          ls -la build

      - name: Zip build
        run: |
          set -euo pipefail
          cd build && zip -qr forecast_sanjii_web.zip .

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: html5-build
          path: build/forecast_sanjii_web.zip
          if-no-files-found: error
          retention-days: 7

      - name: Push to itch.io
        env:
          BUTLER_API_KEY: ${{ secrets.BUTLER_API_KEY }}
        run: |
          set -euo pipefail
          VERSION="${GITHUB_RUN_NUMBER}.${GITHUB_SHA::7}"
          butler push build/forecast_sanjii_web.zip "$ITCH_TARGET" --userversion "$VERSION"
